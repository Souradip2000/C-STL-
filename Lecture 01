// Array containers

Declaring an array in the global space will automatically initialise all the elements of the array with zero.
Declaring an array inside int main(), the elements of the array will have garbage values.

.at(index)    --> gives access to the element at the specified index of the array

.fill(number)   --> initialises all the elements of the array with the number

array<int,4> arr={3};   --> here only the first element is initialised to 3 and the rest of the elements are initialised to 0


// Iterators

.begin()  --> points to the first element

.end()  --> points to the address after the last element

.rbegin() --> points to the last element

.rend() --> points to the address before the first element

// Code:

array<int, 5> arr = {1,2,3,4,5};
for(auto it: arr.begin(); it != arr.end(); it++)
{
  cout<<*it<<" ";
}

auto it --> it is a pointer - auto automatically takes the data type of the element that is present at the begin() location
